// Code generated by go-swagger; DO NOT EDIT.

package general

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostConfigOKCode is the HTTP code returned for type PostConfigOK
const PostConfigOKCode int = 200

/*PostConfigOK Create / update silence response

swagger:response postConfigOK
*/
type PostConfigOK struct {
}

// NewPostConfigOK creates PostConfigOK with default headers values
func NewPostConfigOK() *PostConfigOK {

	return &PostConfigOK{}
}

// WriteResponse to the client
func (o *PostConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostConfigBadRequestCode is the HTTP code returned for type PostConfigBadRequest
const PostConfigBadRequestCode int = 400

/*PostConfigBadRequest Bad request

swagger:response postConfigBadRequest
*/
type PostConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostConfigBadRequest creates PostConfigBadRequest with default headers values
func NewPostConfigBadRequest() *PostConfigBadRequest {

	return &PostConfigBadRequest{}
}

// WithPayload adds the payload to the post config bad request response
func (o *PostConfigBadRequest) WithPayload(payload string) *PostConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config bad request response
func (o *PostConfigBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostConfigNotFoundCode is the HTTP code returned for type PostConfigNotFound
const PostConfigNotFoundCode int = 404

/*PostConfigNotFound A silence with the specified ID was not found

swagger:response postConfigNotFound
*/
type PostConfigNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostConfigNotFound creates PostConfigNotFound with default headers values
func NewPostConfigNotFound() *PostConfigNotFound {

	return &PostConfigNotFound{}
}

// WithPayload adds the payload to the post config not found response
func (o *PostConfigNotFound) WithPayload(payload string) *PostConfigNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config not found response
func (o *PostConfigNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
