{"remainingRequest":"/Users/zoues/Code/projects/indagate/ui/node_modules/babel-loader/lib/index.js!/Users/zoues/Code/projects/indagate/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zoues/Code/projects/indagate/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zoues/Code/projects/indagate/ui/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zoues/Code/projects/indagate/ui/src/views/login/index.vue","mtime":1557709229132},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/zoues/Code/projects/indagate/ui/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _SocialSignin = _interopRequireDefault(require(\"./components/SocialSignin\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Login',\n  components: {\n    SocialSign: _SocialSignin.default\n  },\n  data: function data() {\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!(0, _validate.validUsername)(value)) {\n        callback(new Error('Please enter the correct user name'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 6) {\n        callback(new Error('The password can not be less than 6 digits'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loginForm: {\n        username: 'admin',\n        password: '111111'\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword\n        }]\n      },\n      passwordType: 'password',\n      capsTooltip: false,\n      loading: false,\n      showDialog: false,\n      redirect: undefined\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  created: function created() {// window.addEventListener('storage', this.afterQRScan)\n  },\n  mounted: function mounted() {\n    if (this.loginForm.username === '') {\n      this.$refs.username.focus();\n    } else if (this.loginForm.password === '') {\n      this.$refs.password.focus();\n    }\n  },\n  destroyed: function destroyed() {// window.removeEventListener('storage', this.afterQRScan)\n  },\n  methods: {\n    checkCapslock: function checkCapslock() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          shiftKey = _ref.shiftKey,\n          key = _ref.key;\n\n      if (key && key.length === 1) {\n        if (shiftKey && key >= 'a' && key <= 'z' || !shiftKey && key >= 'A' && key <= 'Z') {\n          this.capsTooltip = true;\n        } else {\n          this.capsTooltip = false;\n        }\n      }\n\n      if (key === 'CapsLock' && this.capsTooltip === true) {\n        this.capsTooltip = false;\n      }\n    },\n    showPwd: function showPwd() {\n      var _this = this;\n\n      if (this.passwordType === 'password') {\n        this.passwordType = '';\n      } else {\n        this.passwordType = 'password';\n      }\n\n      this.$nextTick(function () {\n        _this.$refs.password.focus();\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n\n          _this2.$store.dispatch('user/login', _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.redirect || '/'\n            });\n\n            _this2.loading = false;\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    } // afterQRScan() {\n    //   if (e.key === 'x-admin-oauth-code') {\n    //     const code = getQueryObject(e.newValue)\n    //     const codeMap = {\n    //       wechat: 'code',\n    //       tencent: 'code'\n    //     }\n    //     const type = codeMap[this.auth_type]\n    //     const codeName = code[type]\n    //     if (codeName) {\n    //       this.$store.dispatch('LoginByThirdparty', codeName).then(() => {\n    //         this.$router.push({ path: this.redirect || '/' })\n    //       })\n    //     } else {\n    //       alert('第三方登录失败')\n    //     }\n    //   }\n    // }\n\n  }\n};\nexports.default = _default;",null]}