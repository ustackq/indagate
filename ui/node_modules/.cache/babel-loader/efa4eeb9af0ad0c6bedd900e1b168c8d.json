{"remainingRequest":"/Users/zoues/Code/projects/indagate/ui/node_modules/babel-loader/lib/index.js!/Users/zoues/Code/projects/indagate/ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zoues/Code/projects/indagate/ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zoues/Code/projects/indagate/ui/src/views/dashboard/admin/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zoues/Code/projects/indagate/ui/src/views/dashboard/admin/components/LineChart.vue","mtime":1557709229122},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zoues/Code/projects/indagate/ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/zoues/Code/projects/indagate/ui/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\nvar _utils = require(\"@/utils\");\n\n//\n//\n//\n//\nrequire('echarts/theme/macarons'); // echarts theme\n\n\nvar _default = {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      chart: null,\n      sidebarElm: null\n    };\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler: function handler(val) {\n        this.setOptions(val);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.initChart();\n    });\n\n    if (this.autoResize) {\n      this.__resizeHandler = (0, _utils.debounce)(function () {\n        if (_this.chart) {\n          _this.chart.resize();\n        }\n      }, 100);\n      window.addEventListener('resize', this.__resizeHandler);\n    } // 监听侧边栏的变化\n\n\n    this.sidebarElm = document.getElementsByClassName('sidebar-container')[0];\n    this.sidebarElm && this.sidebarElm.addEventListener('transitionend', this.sidebarResizeHandler);\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHandler);\n    }\n\n    this.sidebarElm && this.sidebarElm.removeEventListener('transitionend', this.sidebarResizeHandler);\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    sidebarResizeHandler: function sidebarResizeHandler(e) {\n      if (e.propertyName === 'width') {\n        this.__resizeHandler();\n      }\n    },\n    setOptions: function setOptions() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          expectedData = _ref.expectedData,\n          actualData = _ref.actualData;\n\n      this.chart.setOption({\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          boundaryGap: false,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 20,\n          top: 30,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          padding: [5, 10]\n        },\n        yAxis: {\n          axisTick: {\n            show: false\n          }\n        },\n        legend: {\n          data: ['expected', 'actual']\n        },\n        series: [{\n          name: 'expected',\n          itemStyle: {\n            normal: {\n              color: '#FF005A',\n              lineStyle: {\n                color: '#FF005A',\n                width: 2\n              }\n            }\n          },\n          smooth: true,\n          type: 'line',\n          data: expectedData,\n          animationDuration: 2800,\n          animationEasing: 'cubicInOut'\n        }, {\n          name: 'actual',\n          smooth: true,\n          type: 'line',\n          itemStyle: {\n            normal: {\n              color: '#3888fa',\n              lineStyle: {\n                color: '#3888fa',\n                width: 2\n              },\n              areaStyle: {\n                color: '#f3f8ff'\n              }\n            }\n          },\n          data: actualData,\n          animationDuration: 2800,\n          animationEasing: 'quadraticOut'\n        }]\n      });\n    },\n    initChart: function initChart() {\n      this.chart = _echarts.default.init(this.$el, 'macarons');\n      this.setOptions(this.chartData);\n    }\n  }\n};\nexports.default = _default;",null]}